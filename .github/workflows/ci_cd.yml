name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
        
      - name: Run tests
        run: flutter test

  build-android:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
        
      - name: Build APK
        run: flutter build apk --release
        
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk
          
      - name: Get version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: |
            ## What's Changed
            - New release with version ${{ steps.version.outputs.version }}
            
            ## Download
            Download the APK from the assets below.
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/app/outputs/flutter-apk/app-release.apk
          asset_name: adhan-app-${{ steps.version.outputs.version }}.apk
          asset_content_type: application/vnd.android.package-archive
          
      - name: Update Firebase Remote Config
        run: |
          # Install Node.js
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs
          
          # Install Firebase CLI
          npm install -g firebase-tools
          
          # Authenticate with Firebase
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}' > firebase-service-account.json
          
          # Update Remote Config
          firebase remoteconfig:get --project adhan-ahmadiyya > remote-config.json
          
          # Parse version components
          VERSION="${{ steps.version.outputs.version }}"
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3 | cut -d+ -f1)
          
          # Create new remote config
          cat > new-remote-config.json << EOF
          {
            "conditions": [
              {
                "name": "Default",
                "expression": "true",
                "tagColor": "BLUE"
              }
            ],
            "parameters": {
              "force_update_version": {
                "defaultValue": {
                  "value": "$MAJOR.$MINOR.$PATCH"
                },
                "description": "Version that requires force update",
                "valueType": "STRING"
              },
              "force_update_url": {
                "defaultValue": {
                  "value": "https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.version }}/adhan-app-${{ steps.version.outputs.version }}.apk"
                },
                "description": "Download URL for force update",
                "valueType": "STRING"
              },
              "general_update_version": {
                "defaultValue": {
                  "value": "$MAJOR.$MINOR.$PATCH"
                },
                "description": "Version that suggests general update",
                "valueType": "STRING"
              },
              "general_update_url": {
                "defaultValue": {
                  "value": "https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.version }}/adhan-app-${{ steps.version.outputs.version }}.apk"
                },
                "description": "Download URL for general update",
                "valueType": "STRING"
              }
            },
            "version": {
              "versionNumber": "1",
              "updateTime": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
              "updateUser": {
                "email": "github-actions@github.com"
              },
              "updateOrigin": "REMOTE_CONFIG_UPDATE_ORIGIN_CONSOLE",
              "updateType": "INCREMENTAL_UPDATE"
            }
          }
          EOF
          
          # Deploy new remote config
          firebase remoteconfig:versions:publish new-remote-config.json --project adhan-ahmadiyya
          
          # Cleanup
          rm firebase-service-account.json remote-config.json new-remote-config.json
